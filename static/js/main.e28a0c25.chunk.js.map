{"version":3,"sources":["voncount.png","input.js","App.js","reportWebVitals.js","index.js"],"names":["Input","state","count","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","input","onSubmit","this","type","onChange","className","Component","App","countUp","countDown","number","parseInt","src","Voncount","alt","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAAe,MAA0B,qCCkC1BA,E,4MA9BfC,MAAO,CACHC,MAAO,I,EAGXC,aAAe,SAACC,GACZ,EAAKC,SAAS,CACbH,MAAOE,EAAEE,OAAOC,S,EAGrBC,aAAe,SAACJ,GACZA,EAAEK,iBACF,EAAKC,MAAMC,MAAM,EAAKV,MAAMC,OAC5B,EAAKG,SAAS,CACVH,MAAO,M,uDAQP,OACG,uBAAMU,SAAUC,KAAKL,aAArB,UACC,uBAAOM,KAAK,OAAOC,SAAWF,KAAKV,aAAcI,MAAOM,KAAKZ,MAAMC,QACnE,wBAAQc,UAAU,OAAlB,2C,GAzBQC,aCoDLC,E,4MAjDbjB,MAAQ,CACNC,MAAO,G,EAGTiB,QAAU,WACR,EAAKd,SACH,CAACH,MAAO,EAAKD,MAAMC,MAAO,K,EAI9BkB,UAAY,WACV,EAAKf,SACH,CAACH,MAAO,EAAKD,MAAMC,MAAO,K,EAK9BS,MAAQ,SAACU,GACP,IAAId,EAAQe,SAASD,GACrB,EAAKhB,SAAS,CACZH,MAAO,EAAKD,MAAMC,MAAQK,K,uDAM5B,OACE,sBAAKS,UAAU,MAAf,UACE,oBAAIA,UAAU,SAAd,8BACF,qBAAKO,IAAKC,EAAUC,IAAI,GAAGT,UAAU,WAKnC,wBAAQA,UAAU,gBAAgBU,QAASb,KAAKM,QAAhD,uBACA,uBACA,uBAEA,wBAAQH,UAAU,kBAAkBU,QAASb,KAAKO,UAAlD,wBACA,cAAC,EAAD,CAAOT,MAAOE,KAAKF,QACnB,mDACA,6BAAKE,KAAKZ,MAAMC,e,GA1CNe,aCOHU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.e28a0c25.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/voncount.3bda66e9.png\";","import React, { Component } from 'react'\r\nimport './index.css'\r\n\r\nclass Input extends Component {\r\nstate ={\r\n    count: ''\r\n}\r\n\r\nhandleChange = (e) => {\r\n    this.setState({\r\n     count: e.target.value\r\n    })\r\n}\r\nhandleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.input(this.state.count)\r\n    this.setState({\r\n        count: ''\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n           <form onSubmit={this.handleSubmit}>\r\n            <input type=\"text\" onChange= {this.handleChange} value={this.state.count} />\r\n            <button className=\"last\">Add your numbers here!</button>\r\n           </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Input","import React, { Component } from 'react'\nimport Voncount from './voncount.png'\nimport Input from './input.js'\n\n\nclass App extends Component {\n  state = {\n    count: 0\n  }\n  \n  countUp = () => {\n    this.setState(\n      {count: this.state.count +1}\n    )\n  }\n  \n  countDown = () => {\n    this.setState(\n      {count: this.state.count -1}\n  \n    )\n  }\n\n  input = (number) => {\n    let value = parseInt(number)\n    this.setState({\n      count: this.state.count + value\n    })\n  }    \n  \n  \n  render () {\n    return(\n      <div className='App'>\n        <h1 className='center'>Counting time...</h1>\n      <img src={Voncount} alt=\"\" className=\"center\"/>\n        \n\n        \n        \n        <button className='buttonup both' onClick={this.countUp}>Count up </button>\n        <br/>\n        <br/>\n  \n        <button className='buttondown both' onClick={this.countDown}>Count down</button>\n        <Input input={this.input}/>\n        <p>The Current Count:</p>\n        <h4>{this.state.count}</h4>\n      </div>\n  \n      )\n    }\n  }\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}